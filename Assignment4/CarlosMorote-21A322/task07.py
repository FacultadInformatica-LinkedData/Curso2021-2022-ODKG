# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pReUU0f1sV8ATvn6deYium1Y2vBl0QMJ

**Task 07: Querying RDF(s)**
"""

!pip3 install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results

ns = Namespace("http://somewhere#")

# RDFLib
for s,p,v in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

# SPARQL
results = g.query(
    prepareQuery('''
      SELECT ?s
      WHERE { ?s rdfs:subClassOf* ns:Person }
    ''',
    initNs = {"ns": ns, "rdfs": RDFS})
)

for r in results:
  print(r)


#for r in g.query(q1):
#  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results

# RDFLib
for s,_,_ in g.triples((None,RDF.type,ns.Person)):
    print(s)

for s,_,_ in g.triples((None,RDFS.subClassOf,ns.Person)):
    for ss,_,_ in g.triples((None,RDF.type,s)):
        print(ss)

# SPARQL
results = g.query(
    prepareQuery('''
      SELECT ?s
      WHERE { 
        {?s_ rdfs:subClassOf* ns:Person.
        ?s a ?s_}
      }
    ''',
    initNs = {"ns": ns, "rdf": RDF})
)

for r in results:
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results

# RDFLib
sub_list = []
for s, _, _ in g.triples((None, RDFS.subClassOf, ns.Person)):
  for sub_list_triple in g.triples((None, RDF.type, s)):
    sub_list.append(sub_list_triple)

for s, _, _ in list(g.triples((None, RDF.type, ns.Person))) + sub_list:
  for properties in g.triples((s, None, None)):
    print(properties)

print("------------------------------------------")

# SPARQL
results = g.query(
    prepareQuery('''
      SELECT ?s ?p ?v
      WHERE { 
        {?s_ rdfs:subClassOf* ns:Person.
        ?s a ?s_.
        ?s ?p ?v}
      }
    ''',
    initNs = {"ns": ns, "rdf": RDF})
)

for r in results:
  print(r)

