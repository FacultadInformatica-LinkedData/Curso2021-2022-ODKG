# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11prfYNJ4g2yONMIuvVrfs2EELn8w-_2o

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

from rdflib.plugins.sparql import prepareQuery
# we import sparql to make the queries
NS = Namespace("http://somewhere#")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

#RDFLib
for s,p,o in g.triples((None, RDFS.subClassOf, NS.Person)):
  print(s)


# SPARQL
q1 = prepareQuery('''
  SELECT ?x WHERE { 
    ?x rdfs:subClassOf ns:Person. 
  }
  ''',
  initNs = { "ns": NS, "rdfs": RDFS}
)

for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

#RDFLib
#All individuals of Person
for s,p,o in g.triples((None, RDF.type, NS.Person)):
  print(s)

#For the subClassOf Researcher the individuals are 
for sa,pa,oa in g.triples((None, RDFS.subClassOf, NS.Person)):
  for sb,pb,ob in g.triples((None,RDF.type,sa)):
    print(sb)

# SPARQL
#All individuals of Person + #or the subClassOf Researcher get the individuals 
q2 = prepareQuery('''
  SELECT ?x WHERE { 
    {?x rdf:type ns:Person. }
  UNION
  { ?xx rdfs:subClassOf ns:Person. 
    ?x rdf:type ?xx }
  }
  ''',
  initNs = { "ns": NS, "rdf": RDF}
)

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

#RDFLib
print("RDFLib")
for s,p,o in g.triples((None, RDF.type, NS.Person)):
  for ss,pp,oo in g.triples((s,None,None)):
    print(ss,pp)

for sa,pa,oa in g.triples((None, RDFS.subClassOf, NS.Person)):
  for sb,pb,ob in g.triples((None,RDF.type,sa)):
    for sc,pc,oc in g.triples((sb,None,None)):
      print(sc,pc)

# SPARQL
print("SPARQL")
q3 = prepareQuery('''
  SELECT ?x ?y WHERE { 
    {?x rdf:type ns:Person. 
    ?x ?y ?z}
    UNION
    { ?xx rdfs:subClassOf ns:Person. 
    ?x rdf:type ?xx.
    ?x ?y ?z  }
  }
  ''',
  initNs = { "ns": NS, "rdf": RDF,"rdfs":RDFS}
)

for r in g.query(q3):
  print(r)