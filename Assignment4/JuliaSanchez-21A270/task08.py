# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15Aa0cZcFhUNs1PncxA4_hsQB_7yaZaBO

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

print("graph1")
for s,p,o in g1:
  print(s,p,o)

print("graph2")
for s,p,o in g2:
  print(s,p,o)

#Tarea
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
NS = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

# lista todos los elementos de la clase Person en el primer grafo
q1 = prepareQuery('''
  SELECT ?x WHERE { 
    ?x rdf:type ns:Person. 
  }
  ''',
  initNs = { "ns": NS, "rdf": RDF}
)

for r in g1.query(q1):
  print(r.x)

#completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo

for s,p,o in g1.triples((None,RDF.type,NS.Person)):
  if not list(g1.triples((s,VCARD.Family,None))):
    o=g2.value(s,VCARD.Family)
    g1.add((s,VCARD.Family,Literal(o)))

  if not list(g1.triples((s,VCARD.Given,None))): 
    o=g2.value(s,VCARD.Given)
    g1.add((s,VCARD.Given,Literal(o)))

  if not list(g1.triples((s,VCARD.EMAIL,None))) : 
    o=g2.value(s,VCARD.EMAIL)
    g1.add((s,VCARD.EMAIL,Literal(o)))

print("graph1 completo")
for s,p,o in g1:
  print(s,p,o)