# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1anw8ev56pAJkVreY9FMDx9v5Lbww16Sv

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

print("RDFLib:")
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s,p,o)

from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  SELECT ?s
  WHERE { 
    ?s rdfs:subClassOf ns:Person. 
  }
  ''',
  initNs = { "rdfs": RDFS, "ns": ns}
)
print("SPARQL:")
for s in g.query(q1):
  print(s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

print("RDFLib:")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for ss,pp,oo in g.triples((None, RDF.type, s)):
    print(ss)

q2 = prepareQuery('''
  SELECT ?ss
  WHERE { 
    { 
      ?ss rdf:type ns:Person. 
    } UNION {
      ?sss rdfs:subClassOf ns:Person.
      ?ss rdf:type ?sss
    }
  }
  ''',
  initNs = { "rdfs": RDFS,"rdf": RDF, "ns": ns}
)
print("SPARQL:")
for s2 in g.query(q2):
  print(s2)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

print("RDFLib:")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  for ss,pp,oo in g.triples((s, None, None)):
      print(ss,pp,oo)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for ss,pp,oo in g.triples((None, RDF.type, s)):
    for sss,ppp,ooo in g.triples((ss, None, None)):
      print(sss,ppp,ooo)

q3 = prepareQuery('''
  SELECT ?s ?p ?o
  WHERE { 
    { 
      ?s rdf:type ns:Person.
      ?s ?p ?o
    } UNION {
      ?s rdf:type ?ss.
      ?s ?p ?o.
      ?ss rdfs:subClassOf ns:Person
    }
  }
  ''',
  initNs = { "rdfs": RDFS,"rdf": RDF, "ns": ns}
)
print("SPARQL:")
for s3 in g.query(q3):
  print(s3)