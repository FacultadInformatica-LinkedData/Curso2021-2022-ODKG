# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ae5KxMbDWnYFwey1UCZFbiMPh3r77X9n

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
q1 = prepareQuery('''
                  SELECT DISTINCT ?subclass
                  WHERE{
                    ?subclass RDFS:subClassOf ns:Person
                  }
                  ''',
                  initNs ={"RDFS":RDFS, "ns":ns})

# Visualize the results

for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
q2 = prepareQuery('''
                  SELECT ?person
                  WHERE{
                    {?person RDF:type ?class .
                    ?class RDFS:subClassOf ns:Person} 
                    UNION
                    {?person a ns:Person}
                  }

                  ''',
                  initNs ={"RDF":RDF, "ns":ns, "RDFS":RDFS})

# Visualize the results

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
q3 = prepareQuery('''
                  SELECT ?person ?rel ?prop
                  WHERE{
                    { ?person ?rel ?prop .
                      ?person RDF:type ?class .
                      ?class RDFS:subClassOf ns:Person} 
                    UNION
                    {?person ?rel ?prop .
                     ?person a ns:Person}
                  }
                  ''',
                  initNs ={"RDF":RDF, "ns":ns, "RDFS":RDFS})

# Visualize the results

for r in g.query(q3):
  print(r)