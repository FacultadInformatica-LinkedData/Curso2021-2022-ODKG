# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cms9Blcg0-7Ja2I1ss7Fzw0l-ark8pxI

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

#RDFLib
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf*'*', ns.Person)):
    print(s)

#SPARQL
from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf* ns:Person. 
  }
  ''',
  initNs = { "ns": ns, "rdfs": RDFS} 
)

for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

#RDFLib
for s1,p1,o1 in g.triples((None, RDFS.subClassOf*'*', ns.Person)):
    for s2,p2,o2 in g.triples((None, RDF.type, s1)):
        print(s2)

#SPARQL
q2 = prepareQuery('''
 SELECT ?Subject WHERE { 
   ?Subject rdf:type/rdfs:subClassOf* ns:Person. 
  }
  ''',
  initNs = { "ns": ns, "rdfs": RDFS, "rdf": RDF} 
)

for r in g.query(q2):
 print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

#RDFLib
for s1,p1,o1 in g.triples((None, RDFS.subClassOf*'*', ns.Person)):
    for s2,p2,o2 in g.triples((None, RDF.type, s1)):
      for s3,p3,o3 in g.triples((s2,None,None)):
        print(s3,p3,o3)

#SPARQL
q3 = prepareQuery('''
  SELECT DISTINCT ?Subject ?prop ?value WHERE { 
    ?Subject rdf:type/rdfs:subClassOf* ns:Person.
    ?Subject ?prop ?value.
  }
  ''',
  initNs = { "ns": ns, "rdfs": RDFS, "rdf": RDF} 
)

for r in g.query(q3):
  print(r.Subject,r.prop,r.value)