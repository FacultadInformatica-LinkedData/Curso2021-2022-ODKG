# -*- coding: utf-8 -*-
"""Task_07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rCUaujbXX4Pwo7qjot8jpHVxpN0uI2In

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery # Importing necessary tools for SPARQL

### Defining namespaces:
NS = Namespace("http://somewhere#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")


### Listing all subclasses of "Person" with RDFLib
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

### Listing all subclasses of "Person" with SPARQL
q1 = prepareQuery('''
  SELECT ?x WHERE {
    ?x rdfs:subClassOf ns:Person.
  }
  ''',
  initNs = {"ns": NS, "rdfs": RDFS}
)

for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""

### Listing all individuals of "Person" with RDFLib
for s, p, o in g.triples((None, RDF.type, ns.Person)):            # Individuals defined as 'Person'
  print(s)

for s0, p0, o0 in g.triples((None, RDFS.subClassOf, ns.Person)):  # Individuals defined as a subclass of 'Person'
  for s1, p1, o1 in g.triples((None, RDF.type, s0)):
    print(s1)

### Listing all individuals of "Person" with SPARQL
q2 = prepareQuery('''
  SELECT ?x WHERE {
    ?x rdf:type ns:Person.
  }
  ''',
  initNs = {"ns": NS, "rdf": RDF}
)

for x in g.query(q2):
  print(x)

q3 = prepareQuery('''
  SELECT ?x WHERE {
    ?y rdfs:subClassOf ns:Person.
    ?x rdf:type ?y
  }
  ''',
  initNs = {"ns": NS, "rdf": RDF, "rdfs": RDFS}
)

for x in g.query(q3):
  print(x)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""

### Listing all individuals of "Person" and all their properties with RDFLib
for s0, p0, o0 in g.triples((None, RDF.type, ns.Person)):
  for s1, p1, o1 in g.triples((s0, None, None)):
    print(s1, p1)  # Or equivalently, print(s0,p1)

for s0, p0, o0 in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1, p1, o1 in g.triples((None, RDF.type, s0)):
    for s2, p2, o2 in g.triples((s1, None, None)):
     print(s2, p2)  # Or equivalently, print(s1,p2)


### Listing all individuals of "Person" and all their properties with SPARQL
q4 = prepareQuery('''
  SELECT ?x ?y WHERE {
    ?x rdf:type ns:Person.
    ?x ?y ?z
  }
  ''',
  initNs = {"ns": NS, "rdf": RDF}
)

for x in g.query(q4):
  print(x)

q5 = prepareQuery('''
  SELECT ?x ?y WHERE {
    ?t rdfs:subClassOf ns:Person.
    ?x rdf:type ?t.
    ?x ?y ?z
  }
  ''',
  initNs = {"ns": NS, "rdf": RDF, "rdfs": RDFS}
)

for x in g.query(q5):
  print(x)