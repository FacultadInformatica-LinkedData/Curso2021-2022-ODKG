# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")


"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")

print("With RDFLib")

for s,p,o in g.triples((None, RDF.subClassOf, ns.Person)):
  print(s,p,o)


print("With SPARQL")

from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  SELECT
    ?Subject
  WHERE {
    ?Subject rdfs:subClassOf ns:Person.
  }
  ''',
  initNs = { "rdfs": RDFS, "ns": ns }
)

for answer in g.query(q1):
  print(answer)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""

print("With RDFLib")

for s,p,o in g.triples((None, RDF.subClassOf, ns.Person)):
  print(s,p,o)

for s,p,o in g.triples((None, RDFS.subClassOf+, ns.Person)):
  for r,d,a in g.triples((None, RDF.type, s)):
    print(r)

print("With SPARQL")

q2 = prepareQuery('''
    SELECT ?Subject
    WHERE {
        {
            ?Subject rdf:type ns:Person.
        } UNION {
            ?SSubject rdfs:subClassOf ns:Person.
            ?Subject rdf:type ?SSubject
        }

    }
    ''',
    initNs = { "rdf": RDF, "rdfs": RDFS, "ns": ns }
)

for answer in g.query(q2):
    print(answer)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""

print("With RDFLib")

for s, p, o in g.triples((None, RDF.type, ns.Person)):
    for s1, p1, o1 in g.triples((s, None, None)):
        print(s1,p1,o1)

for s,p,o in g.triples((None, RDFS.subClassOf+, ns.Person)):
    for r,d,a in g.triples((None, RDF.type, s)):
        for s0, p0, o0 in g.triples((r, None, None)):
            print(s0,p0,o0)

print("With SPARQL")

q3 = prepareQuery('''
SELECT ?Subject ?prop ?o
WHERE {
    {
        ?Subject rdf:type ns:Person.
        ?Subject ?prop ?o
    }
    UNION
    {
        ?sc rdfs:subClassOf ns:Person.
        ?Subject rdf:type ?sc.
        ?Subject ?prop ?o
    }
}
''',
initNs = {"rdf": RDF,"ns":ns, "rdfs":RDFS }
)

for r in g.query(q3):
    print(r)
